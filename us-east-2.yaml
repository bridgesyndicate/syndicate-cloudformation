Description: Ohio, us-east-2, public ELB and containers
Resources:
  SyndicateVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.1.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref SyndicateVPC
  PublicSubnetDefaultRoute:
    Type: AWS::EC2::Route
    DependsOn: SyndicateVPCAttachInternetGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref SyndicateVPCInternetGateway
  NatExternalIP:
    Type: AWS::EC2::EIP
  NATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      ConnectivityType: public
      SubnetId: !Ref SubnetPublic
      AllocationId: !GetAtt NatExternalIP.AllocationId
  NATRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref SyndicateVPC
  NATDefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref NATRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway
  NATUsEastOneRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref NATRouteTable
      DestinationCidrBlock: 10.0.0.0/16
      VpcPeeringConnectionId: pcx-0c6802235aace0944
  LambdaNATDefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref SyndicateVPCRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway
  SyndicateVPCRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref SyndicateVPC
  SyndicateVPCInternetGateway:
    Type: AWS::EC2::InternetGateway
  SyndicateVPCAttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref SyndicateVPC
      InternetGatewayId: !Ref SyndicateVPCInternetGateway
  SubnetPublic:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.1.253.0/24
      VpcId: !Ref SyndicateVPC
  SubnetMinecraft:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.1.0.0/20
      VpcId: !Ref SyndicateVPC
  SubnetBungee:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.1.16.0/24
      VpcId: !Ref SyndicateVPC
  BungeeSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref NATRouteTable
      SubnetId: !Ref SubnetBungee
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref SubnetPublic
  MinecraftSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref NATRouteTable
      SubnetId: !Ref SubnetMinecraft
  MinecraftIngressSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow inbound minecraft
      VpcId: !Ref SyndicateVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        ToPort: 25565
        FromPort: 25565
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: -1
        FromPort: -1
        ToPort: -1
        CidrIp: 0.0.0.0/0
    DependsOn:
      - SyndicateVPC
  S3Endpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: '*'
            Action:
              - '*'
            Resource:
              - '*'
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      VpcId: !Ref SyndicateVPC
      RouteTableIds:
        - !Ref SyndicateVPCRouteTable
        - !Ref NATRouteTable
  SyndicateECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: SyndicateECSCluster
      CapacityProviders:
        - FARGATE
        - FARGATE_SPOT
      DefaultCapacityProviderStrategy:
        - CapacityProvider: FARGATE
          Weight: 1
        - CapacityProvider: FARGATE_SPOT
          Weight: 1
  SyndicateBungeeTaskLogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: /ecs/SyndicateBungeeTask
  SyndicateBungeeTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ExecutionRoleArn: arn:aws:iam::595508394202:role/ecsTaskExecutionRole
      ContainerDefinitions:
        - Name: SyndicateBungeeTask
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/SyndicateBungeeTask
              awslogs-region: us-east-2
              awslogs-stream-prefix: ecs
          PortMappings:
            - HostPort: 25565
              Protocol: tcp
              ContainerPort: 25565
          Image: 595508394202.dkr.ecr.us-west-2.amazonaws.com/syn-bungee-servers:latest
          Environment:
            - Name: RABBIT_URI
              Value: amqps://b-c1cba83f-2b4d-4463-bef0-37cde0190712.mq.us-west-2.amazonaws.com:5671
            - Name: LOBBY_HOSTNAME
              Value: !GetAtt LobbyLoadBalancer.DNSName
            - Name: SYNDICATE_WEB_SERVICE_REGION
              Value: us-west-2
      PlacementConstraints: []
      Memory: 1024
      TaskRoleArn: arn:aws:iam::595508394202:role/syndicate-bridge-dev-server-task-role
      Family: SyndicateBungeeTaskDefinition
      RequiresCompatibilities:
        - FARGATE
      NetworkMode: awsvpc
      Cpu: '512'
  SyndicateBungeeECSServiceV03:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: SyndicateBungeeECSServiceV03
      Cluster: !Ref SyndicateECSCluster
      DesiredCount: 0
      EnableExecuteCommand: 'true'
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: SyndicateBungeeTask
          ContainerPort: 25565
          TargetGroupArn: !Ref BungeeLoadBalancerTargetGroupV03
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - !Ref MinecraftIngressSecurityGroup
          Subnets:
            - !Ref SubnetBungee
      SchedulingStrategy: REPLICA
      TaskDefinition: !Ref SyndicateBungeeTaskDefinition
    DependsOn:
      - BungeeLoadBalancerMinecraftListenerV03
  BungeeLoadBalancerElasticIPV03:
    Type: AWS::EC2::EIP
  BungeeLoadBalancerV03:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      SubnetMappings:
        - SubnetId: !Ref SubnetPublic
          AllocationId: !GetAtt BungeeLoadBalancerElasticIPV03.AllocationId
      Type: network
  BungeeLoadBalancerTargetGroupV03:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      TargetType: ip
      Protocol: TCP
      Port: 25565
      VpcId: !Ref SyndicateVPC
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      HealthCheckIntervalSeconds: 10
  BungeeLoadBalancerMinecraftListenerV03:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
         LoadBalancerArn: !Ref BungeeLoadBalancerV03
         DefaultActions:
           - Type: forward
             TargetGroupArn: !Ref BungeeLoadBalancerTargetGroupV03
         Port: 25565
         Protocol: "TCP"
  LobbyLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      SubnetMappings:
        - SubnetId: !Ref SubnetMinecraft
      Type: network
      Scheme: internal
  LobbyLoadBalancerTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      TargetType: ip
      Protocol: TCP
      Port: 25565
      VpcId: !Ref SyndicateVPC
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      HealthCheckIntervalSeconds: 10
  LobbyLoadBalancerMinecraftListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
         LoadBalancerArn: !Ref LobbyLoadBalancer
         DefaultActions:
           - Type: forward
             TargetGroupArn: !Ref LobbyLoadBalancerTargetGroup
         Port: 25565
         Protocol: "TCP"
  SyndicateLobbyTaskLogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: /ecs/SyndicateLobbyTask
  SyndicateLobbyTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ExecutionRoleArn: arn:aws:iam::595508394202:role/ecsTaskExecutionRole
      ContainerDefinitions:
        - Name: SyndicateLobbyTask
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/SyndicateLobbyTask
              awslogs-region: us-east-2
              awslogs-stream-prefix: ecs
          PortMappings:
            - HostPort: 25565
              Protocol: tcp
              ContainerPort: 25565
          Image: 595508394202.dkr.ecr.us-west-2.amazonaws.com/syn-lobby:latest
      PlacementConstraints: []
      Memory: 1024
      TaskRoleArn: arn:aws:iam::595508394202:role/syndicate-bridge-dev-server-task-role
      Family: SyndicateLobbyTaskDefinition
      RequiresCompatibilities:
        - FARGATE
      NetworkMode: awsvpc
      Cpu: '512'
  SyndicateLobbyECSService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: SyndicateLobbyECSServiceV03
      Cluster: !Ref SyndicateECSCluster
      DesiredCount: 0
      EnableExecuteCommand: 'true'
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: SyndicateLobbyTask
          ContainerPort: 25565
          TargetGroupArn: !Ref LobbyLoadBalancerTargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - !Ref MinecraftIngressSecurityGroup
          Subnets:
            - !Ref SubnetMinecraft
      SchedulingStrategy: REPLICA
      TaskDefinition: !Ref SyndicateLobbyTaskDefinition
    DependsOn:
      - LobbyLoadBalancerMinecraftListener
  SyndicateBridgeTaskLogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: /ecs/SyndicateBridgeTask
  SyndicateBridgeTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ExecutionRoleArn: arn:aws:iam::595508394202:role/ecsTaskExecutionRole
      ContainerDefinitions:
        - Name: SyndicateBridgeTask
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/SyndicateBridgeTask
              awslogs-region: us-east-2
              awslogs-stream-prefix: ecs
          PortMappings:
            - HostPort: 25565
              Protocol: tcp
              ContainerPort: 25565
          Environment:
            - Name: SYNDICATE_ENV
              Value: production
            - Name: SYNDICATE_MATCH_QUEUE_NAME
              Value: syndicate_production_games
            - Name: SYNDICATE_WEB_SERVICE_REGION
              Value: us-west-2
          Image: 595508394202.dkr.ecr.us-west-2.amazonaws.com/syn-bridge-servers:latest
      PlacementConstraints: []
      Memory: 1024
      TaskRoleArn: arn:aws:iam::595508394202:role/syndicate-bridge-dev-server-task-role
      Family: SyndicateBridgeTaskDefinition
      RequiresCompatibilities:
        - FARGATE
      NetworkMode: awsvpc
      Cpu: '512'
  SyndicateBridgeECSService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: SyndicateBridgeECSService
      Cluster: !Ref SyndicateECSCluster
      DesiredCount: 0
      EnableExecuteCommand: 'true'
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - !Ref MinecraftIngressSecurityGroup
          Subnets:
            - !Ref SubnetMinecraft
      SchedulingStrategy: REPLICA
      TaskDefinition: !Ref SyndicateBridgeTaskDefinition
Outputs:
  SyndicateVPC:
    Description: us-east-2 syndicate VPC
    Value: !Ref SyndicateVPC
    Export:
      Name: !Sub '${AWS::StackName}-SyndicateVPCId'
