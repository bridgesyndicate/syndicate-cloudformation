Description: Crate an Amazon MQ Broker for Bridge
Resources:
  SyndicateBrokerVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.1.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
  SubnetBroker:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.1.0.0/24
      VpcId: !Ref SyndicateBrokerVPC
  RabbitIngressSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow inbound rabbitmq
      VpcId: !Ref SyndicateBrokerVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        ToPort: 5672
        FromPort: 5672
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: -1
        FromPort: -1
        ToPort: -1
        CidrIp: 0.0.0.0/0
    DependsOn:
      - SyndicateBrokerVPC
  SyndicateBroker:
    Type: 'AWS::AmazonMQ::Broker'
    Properties:
      AutoMinorVersionUpgrade: 'false'
      BrokerName: SyndicateRabbitBroker
      DeploymentMode: SINGLE_INSTANCE
      EngineType: RabbitMQ
      EngineVersion: 3.8.11
      HostInstanceType: mq.t3.micro
      MaintenanceWindowStartTime:
        DayOfWeek: Monday
        TimeOfDay: '22:45'
        TimeZone: America/Los_Angeles
      PubliclyAccessible: 'false'
      SecurityGroups:
        - !Ref RabbitIngressSecurityGroup
      SubnetIds:
        - !Ref SubnetBroker
      Users:
        - ConsoleAccess: 'true'
          Password: AmazonMqPassword
          Username: AmazonMqUsername
Outputs:
  AmqpEndpoints: 
    Description: AMQP endpoint that clients should attach to
    Value: !Join [ ",", !GetAtt SyndicateBroker.AmqpEndpoints ]
    Export:
      Name: !Sub '${AWS::StackName}-AmqpEndpoint'
  Arn: 
    Description: ARN of the cluster resource
    Value: !GetAtt SyndicateBroker.Arn
